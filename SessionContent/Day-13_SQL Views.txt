Views

Views: Virtual Tables.
It also has rows and columns as they are real table in db.
Views can be created with the result set from the physical tables/ BASE tables  by joining  one or more tables. 
They are just the logical subset of data from one or more Base tables

Types of views

Simple View 
Complex View. 

Simple views: It can be formed with the result set from only one table. 
Complex views can be constructed on more than one base table. In particular, complex views can contain: join conditions, a group by clause, a order by clause.

Simple Vs Complex views

SIMPLE VIEW	
Contains only one single base table or is created from only one table.	
We cannot use group functions like MAX(), COUNT(), etc.	
Does not contain groups of data.	
DML operations could be performed through a simple view.	
INSERT, DELETE and UPDATE are directly possible on a simple view.	
Simple view does not contain group by, distinct, pseudocolumn like rownum, columns defiend by expressions.	
Does not include NOT NULL columns from base tables.	

COMPLEX VIEW
Contains more than one base tables or is created from more than one tables.
We can use group functions.
It can contain groups of data.
DML operations could not be performed through a complex view.
We cannot apply INSERT, DELETE and UPDATE on complex view directly
It can contain group by, distinct, pseudocolumn like rownum, columns defiend by expressions.
NOT NULL columns that are not selected by simple view can be included in complex view.

Create View

Syntax
CREATE VIEW view_name AS 
SELECT column1, column2..... 
FROM table_name WHERE condition;
Example for Single table

CREATE VIEW DetailsView AS 
     SELECT Name, age, Salary, Department 
     FROM details WHERE Id < 5;
Example for Multiple tables

CREATE VIEW ALLTableView AS
     SELECT d.Name, d.age, d.Salary, d.Department, s.phone 
     FROM details d, StudentInfo s
      WHERE d.Name = s.name;

Update View

Conditions needed to be satisfied to update a view. If any one of these conditions is not met, then we will not be allowed to update the view.
The SELECT statement which is used to create the view should not include GROUP BY clause or ORDER BY clause.
The SELECT statement should not have the DISTINCT keyword.
The View should have all NOT NULL values.
The view should not be created using nested queries or complex queries.
The view should be created from a single table. If the view is created using multiple tables then we will not be allowed to update the view.

We can use the CREATE OR ALTER VIEW statement to add or remove fields from a view.
Syntax of Updating View
CREATE OR ALTER VIEW view_name AS 
SELECT columns 
FROM table [WHERE conditions];

Example
CREATE OR ALTER VIEW ALLTableView1 AS
     SELECT d.Name, d.age, d.Salary, d.Department, s.phone 
     FROM details d, StudentInfo s
     WHERE d.Name = s.name;

Insert row in a view

Syntax
INSERT INTO view_name(column1, column2 , column3,..) VALUES(value1, value2, value3..); 
Example
Insert into DummyView values ('ramu', '30', 'CEC')

Deleting Views

Syntax
DELETE FROM view_name 
WHERE condition; 
view_name: Name of view from where we want to delete rows 
condition: Condition to select rows.
Example:
DELETE FROM DummyView WHERE NAME='ramu';

Drop Views

Syntax
DROP view View_name
Example
DROP view ALLTableView1

